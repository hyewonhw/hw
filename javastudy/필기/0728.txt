1. 생성자 (이런게있음 이런걸 할 수 있겠구나 이해만하기)
메소드와 클래스가 이름이 같음
메소드 = 초록색
클래스 = 분홍색
반환타입없다 = '0이다' 개념이 아니고 아예 존재하지않음

예시 )Computer
반환타입 메소드명 (매개변수) {	}
=없음 	     ↓        =없음
	Computer(){	}

예시) 메인에서 생성자
new Computer();
0 , null 값 가진 생성자임
new Computer("gram", 150)
예로 모델명, 가격으로 필드값을 맞춰줘서 생성 (괄호 안 인수라고함)
Computer에서 생성자 매개변수가 비어있으면 안됨

정보은닉
객체 내부의 정보 = 필드
직접 접근 못하기 때문에 메소드를 통해 접근
내부데이터 신경쓰지말고 보여주는것만 봐라
핵심! 클래스가 다르면 볼 수 없다!

예시) 자판기
내부 안보여주고 버튼(메소드)나 눌러라
내부 보여주면 커피를 적게 넣는 사람, 많이넣는사람, 탈취해가는 사람이 있을것이기때문
버튼을 누르면 커피가 나옴 = 메소드를 통해

pdf 접근제어자 private에서 일반적으로 필드가 private권한을 가짐 임
필드 : private
메소드(생성자) : public

아무것도안적어주면 default로 동작한다
같은 패키지면 클래스가 달라도 볼 수 있음
예시) User클래스와 UserMain클래스는 같은 패키지 내에 있어서
클래스가 달라도 볼 수 있음

메뉴 source에서 
Generate Getters and Setters로 메소드 자동생성
직접 손으로 구현하지않음 (Human error)

더 이상 저장할수없다 와 삭제할게 없다 넣어주는거 필수
정보 확인하는방법 두가지
1) getter
2) print

향상for문 복습

수학개체 1번과 수학개체2번이 하는일이 똑같기 때문에
math는 객체를 만들지 못하게 되어있음

static만 붙여주면 class method가 됨

상속
어떤 클래스가 만든 필드,메소드를 그대로 다른클래스에서 사용가능
*슈퍼 - 서브*

is a 로 연결할수 있는 단어는 상속개체
예시) Student is a Person
         = 자식        =부모
extends 키워드로 상속함
extends 키워드 자리에 is a를 넣었을 때 말되면 상속가능










































































































