===서브쿼리===
하나의 SQL문의 결과를 다른 SQL문에게 전달하기 위해 두 개 이상의 SQL문을 하나의 SQL문으로 연결하여 처리하는 방법

1. 앨리스가 사는 지역 구하기
SELECT 근무지역 FROM 직원 WHERE 성명 = '앨리스'
'
2. 
SELECT * FROM 직원 WHERE 근무지역 ='앨리스의 근무지역'
3.
SELECT 근무지역 FROM 직원 WHERE 성명 = '앨리스' = SELECT * FROM 직원 WHERE 근무지역 ='앨리스의 근무지역'







1.

다음과 같이 이미 ORA_HOME이 설정되어 있다. 





등록된 ORA_HOME을 Path에 추가하고 추가된 Path 등록 화면을 캡처하여 제출하시오. (5점)







2.

SQL Developer를 실행하고 인코딩을 UTF-8로 설정하시오. 인코딩 설정을 완료한 대화상자를 캡처하여 제출하시오. (5점)







3.

SQL Developer를 실행하고 코드 편집기의 행 여백에 행 번호를 표시할 수 있도록 설정하시오. 설정을 완료한 대화상자를 캡처하여 제출하시오. (5점)







4.

다음 조건을 만족하는 테이블 스페이스를 생성하는 쿼리문을 작성하시오. (5점)

    1) 테이블 스페이스 이름 : DB_SHOP

    2) 데이터 파일 이름 : C:/oraclexe/db_shop.dbf

    3) 용량 : 100MB

CREATE TABLESPACE DB_SHOP

DATAFILE 'C:/oraclexe/db.shop.dbf'

SIZE 100M;





5.

1번에서 생성한 DB_SHOP 테이블 스페이스를 삭제하는 쿼리문을 작성하시오.

내용, 생성된 파일을 모두 삭제하도록 작성하시오.

다른 테이블 스페이스와 관계를 맺었다면 해당 관계에 관련된 모든 사항을 함께 삭제하시오. (5점)

DROP TABLESPACE  DB_SHOP

INCLUDING CONTENTS AND DATAFILES

CASCADE CONSTRAINTS;



6.

다음 새로운 사용자를 생성하고 DBA 권한을 부여하는 쿼리문을 작성하시오. SYS 계정으로 접속이 된 상태로 가정하고 쿼리문을 작성하시오. (10점)

    1) 사용자 이름 : PRODUCTMANAGER

    2) 비밀번호 : 8888

CREATE USER PRODUCTMANAGER IDENTIFIED BY 8888;

GRANT CONNECT, RESOURCE DBA TO PRODUCTMANAGER;





7.

생성된 테이블 스페이스의 파일(*.dbf) 목록을 확인하기 위해서 테이블 스페이스의 파일 목록을 조회할 수 있는 데이터 사전(테이블)의 이름을 작성하시오. (5점)

DBA_TABLESPACES;





8.

아래 모델링을 참고하여 각 테이블의 테이블 정의서를 작성하시오.

작성은 엑셀을 이용하길 권장하나 원한다면 다른 툴을 이용하시오.

완성된 테이블 정의서를 캡쳐하여 제출하시오. (15점)











9.

8번 문제의 모델링과 작성된 테이블 정의서를 참고하여 각 테이블을 생성하는 쿼리문을 작성하시오. (20점)

    1) 올바른 테이블과 칼럼을 설정하시오.

    2) 모델링을 참고하여 PK와 FK와 UNIQUE의 경우 반드시 제약조건의 이름을 설정하시오.

    3) DROP TABLE은 작성하지 마시오.

CREATE TABLE PRODUCTS(

    PRODUCT_NO     NUMBER                  NOT NULL,

    PRODUCT_NAME  VARCHAR2(100 BYTE) NOT NULL,

    PRODUCT_PRICE  NUMBER                  NULL,

    PRODUCT_IMAGE VARCHAR2(300 BYTE)  NULL

);

CREATE TABLE CUSTOMERS(

    CUSTOMER_NO      NUMBER                NOT NULL,

    CUSTOMER_ID        VARCHAR2(30 BYTE) NOT NULL,

    CUSTOMER_NAME   VARCHAR2(30 BYTE) NULL,

    CUSTOMER_PHONE VARCHAR2(15 BYTE) NULL

);

CREATE TABLE ORDERS(

    ORDER_NO         NUMBER  NOT NULL,

    CUSTOMER_NO   NUMBER  NOT NULL,

    PRODUCT_NO     NUMBER  NOT NULL,

    ORDER_AMOUNT NUMBER  NULL

);

ALTER TABLE PRODUCTS

    ADD CONSTRAINT PRODUCT_PK PRIMARY KEY(PRODUCT_NO);

ALTER TABLE CUSTOMERS

    ADD CONSTRAINT CUSTOMER_PK PRIMARY KEY(CUSTOMER_NO);

ALTER TABLE CUSTOMERS 

    ADD CONSTRAINT CUSTOMER_ID_UQ UNIQUE(CUSTOMER_ID);

ALTER TABLE ORDERS

    ADD CONSTRAINT ORDER_PK PRIMARY KEY(ORDER_NO);

ALTER TABLE ORDERS

    ADD CONSTRAINT ORDER_CUSTOMER_FK FOREIGN KEY(CUSTOMER_NO) REFERENCES CUSTOMERS(CUSTOMER_NO);

ALTER TABLE ORDERS

    ADD CONSTRAINT ORDER_PRODUCT_FK FOREIGN KEY(PRODUCT_NO) REFERENCES PRODUCTS(PRODUCT_NO);





10. ORDERS 테이블에서 사용할 다음 시퀀스를 생성하시오. 실제로는 생략 가능한 옵션이라도 반드시 쿼리문에 명시하시오. (10점)

    1) 시퀀스명 : ORDERS_SEQ

    2) 시작번호 : 1

    3) 증가값 : 1

    4) 최대값 없음

    5) 순환 없음

    6) 캐시 사용 안 함

CREATE SEQUENCE ORDERS_SEQ

        START WITH 1 

        INCREMENT BY 1

        MINVALUE 1    

        NOMAXVALUE

        NOCACHE

        NOCYCLE;



11.

완료보고서를 작성하기 위해서 사용자(USER)가 생성한 오브젝트(OBJECT)의 목록을 조회할 수 있는 데이터 사전(테이블) 이름을 작성하시오. (5점)



USER_OBJECTS;
























